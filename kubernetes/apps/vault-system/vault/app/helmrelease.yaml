---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/refs/heads/main/helmrepository-source-v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: vault
spec:
  interval: 30m
  provider: generic
  timeout: 3m
  url: https://helm.releases.hashicorp.com
---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/refs/heads/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vault
spec:
  interval: 30m
  chart:
    spec:
      chart: vault
      version: 0.30.1
      sourceRef:
        kind: HelmRepository
        name: vault
  values:
    global:
      tlsDisable: false
      resources:
        requests:
          memory: 256Mi
          cpu: 250m
        limits:
          memory: 256Mi
          cpu: 250m

    server:
      resources:
        requests:
          memory: 8Gi
          cpu: 2000m
        limits:
          memory: 16Gi
          cpu: 2000m

      # For HA configuration and because we need to manually init the vault,
      # we need to define custom readiness/liveness Probe settings
      readinessProbe:
        enabled: true
        path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
      livenessProbe:
        enabled: true
        path: "/v1/sys/health?standbyok=true"
        initialDelaySeconds: 60

      extraEnvironmentVars:
        VAULT_CACERT: /vault/userconfig/tls-ca/ca.crt

      extraVolumes:
        - type: secret
          name: tls-server
        - type: secret
          name: tls-ca

      dataStorage:
        enabled: true
        storageClass: critical

      auditStorage:
        enabled: true
        storageClass: longhorn

      standalone:
        enabled: false

      ingress:
        enabled: true
        hosts:
          - host: vault.home.mattprovost.dev
            paths:
              - "/"
        tls:
          - secretName: tls-server
            hosts:
              - vault.home.mattprovost.dev

      ha:
        enabled: true
        replicas: 3

        raft:
          enabled: true
          setNodeId: true

          config: |
            ui = true
            cluster_name = "homelab"
            listener "tcp" {
              address = "[::]:8200"
              cluster_address = "[::]:8201"
              tls_cert_file = "/vault/userconfig/tls-server/tls.crt"
              tls_key_file = "/vault/userconfig/tls-server/tls.key"
            }

            storage "raft" {
              path = "/vault/data"
              retry_join {
                leader_api_addr = "https://vault-0.vault-system:8200"
                leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
                leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
                leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
              }
              retry_join {
                leader_api_addr = "https://vault-1.vault-system:8200"
                leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
                leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
                leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
              }
              retry_join {
                leader_api_addr = "https://vault-2.vault-system:8200"
                leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
                leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
                leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
              }
            }
