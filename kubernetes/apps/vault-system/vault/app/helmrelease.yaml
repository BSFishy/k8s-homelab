---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/refs/heads/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vault
spec:
  interval: 30m
  chart:
    spec:
      chart: vault
      version: 0.30.1
      sourceRef:
        kind: HelmRepository
        name: hashicorp
  values:
    global:
      tlsDisable: false
      resources:
        requests:
          memory: 256Mi
          cpu: 250m
        limits:
          memory: 256Mi
          cpu: 250m

    server:
      resources:
        requests:
          memory: 8Gi
          cpu: 2000m
        limits:
          memory: 16Gi
          cpu: 2000m

      readinessProbe:
        enabled: true
        path: "/v1/sys/health?standbyok=true&activecode=200&standbycode=200"
        initialDelaySeconds: 10
        periodSeconds: 5
        failureThreshold: 3
        timeoutSeconds: 3

      livenessProbe:
        enabled: true
        path: "/v1/sys/health?standbyok=true&activecode=200&standbycode=204&sealedcode=204&uninitcode=204&drsecondarycode=204"
        initialDelaySeconds: 30
        periodSeconds: 10
        failureThreshold: 6
        timeoutSeconds: 3

      startupProbe:
        enabled: true
        path: "/v1/sys/health?standbyok=true&activecode=200&standbycode=204&sealedcode=204&uninitcode=204&drsecondarycode=204"
        failureThreshold: 90 # ~15 minutes at 10s period
        periodSeconds: 10
        timeoutSeconds: 3

      extraEnvironmentVars:
        VAULT_CACERT: /vault/userconfig/tls-ca/ca.crt

      extraVolumes:
        - type: secret
          name: tls-server
        - type: secret
          name: tls-ca
        - type: secret
          name: tls-ingress

      dataStorage:
        enabled: true
        storageClass: critical

      auditStorage:
        enabled: true
        storageClass: longhorn

      standalone:
        enabled: false

      ingress:
        enabled: false

      ha:
        enabled: true
        replicas: 3

        raft:
          enabled: true
          setNodeId: true

          config: |
            ui = true
            cluster_name = "homelab"
            listener "tcp" {
              address = "[::]:8200"
              cluster_address = "[::]:8201"
              tls_cert_file = "/vault/userconfig/tls-ingress/tls.crt"
              tls_key_file = "/vault/userconfig/tls-ingress/tls.key"
            }

            storage "raft" {
              path = "/vault/data"
              retry_join {
                leader_api_addr = "https://vault-0.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
                leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
                leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
              }
              retry_join {
                leader_api_addr = "https://vault-1.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
                leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
                leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
              }
              retry_join {
                leader_api_addr = "https://vault-2.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
                leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
                leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
              }
            }

            service_registration "kubernetes" {}
    ui:
      enabled: true
