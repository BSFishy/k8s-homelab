---
# --- ServiceAccount that VSO will use to auth to Vault
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vault-k8s-auth-reviewer
rules:
  - apiGroups: ["authentication.k8s.io"]
    resources: ["tokenreviews"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["serviceaccounts", "namespaces"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-k8s-auth-reviewer-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault-k8s-auth-reviewer
subjects:
  - kind: ServiceAccount
    name: vault
    namespace: infra
---
# yaml-language-server: $schema=https://github.com/datreeio/CRDs-catalog/raw/refs/heads/main/secrets.hashicorp.com/vaultconnection_v1beta1.json
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultConnection
metadata:
  name: vault
spec:
  address: http://vault-active.vault-system:8200
  skipTLSVerify: false
---
# yaml-language-server: $schema=https://github.com/datreeio/CRDs-catalog/raw/refs/heads/main/secrets.hashicorp.com/vaultauth_v1beta1.json
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultAuth
metadata:
  name: authentik-auth
spec:
  vaultConnectionRef: vault
  method: kubernetes
  mount: kubernetes
  kubernetes:
    role: vault
    serviceAccount: vault
    tokenExpirationSeconds: 600
---
# yaml-language-server: $schema=https://github.com/datreeio/CRDs-catalog/raw/refs/heads/main/secrets.hashicorp.com/vaultdynamicsecret_v1beta1.json
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultDynamicSecret
metadata:
  name: authentik-postgres
spec:
  # Reference your VaultAuth (how this namespace authenticates to Vault)
  vaultAuthRef: authentik-auth

  # Path in Vault to fetch from. This is the role you defined in Vault, e.g. database/roles/app-writer
  mount: database
  path: roles/authentik

  # Where to write the generated secret inside Kubernetes
  destination:
    name: authentik-postgres-creds
    create: true

  # rolloutRestartTargets:
  #   - kind: Deployment
  #     name: my-app

  # optional: refresh early before TTL expires
  # refreshAfter: 5m
